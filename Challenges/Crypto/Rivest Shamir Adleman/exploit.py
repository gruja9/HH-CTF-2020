#!/usr/bin/python3

import math

n1 = 11635234479128759438147443213106267982308288779739845369208346901875779133221360242605509981749860005099216603348258916252322642365537252737880788601160043237087578172113439770160923221847022155041157818850851170777185677719032890365312730845725617615149999935233075892632046179996628723892939293977477121168704910135360570442000506066791398738051267290411809978761867313805249273249431785147194078850050419682549011816832171702230420102320026105103301464302592718619782652278454139143152440857510909282315927715946379962342382683329101361308750446105356052721368801451737436817869003166496281449611999194805169381723
n2 = 11525160783554180661486744573341741794044270624138471314078771876665701012134662227749255922465816766292632256769415597533658855232873916119836616444257203090224215632869392230599293869960128041032759985729317590353243003615649128552935660591373272125022478210941140246708099568479461740252720394090877967736286586264166469530194872603576784675157971130632541092753797507317346373048728817211321525830124663431183164749941968748681376240417064792928366337749861477262440544089182488677202040459026162171248107062124942008518032553016464115030819202912988683858940556299978622337237215829830212008524559697365680942603
c = 0x59268140954e6b9a2d452ca7e101b78003910ba0b8aad81d7207ec6d0807f7e5c4ff2374d241104a611b2e5e145ad97678895ad1070c0c733556af44eb7526ebeedb463955b39660bbb9920bb5f71a78151eece51b5c6ce54a57cb6033672a2f29af5e0c6549d8e265e4cc3beaccb4b49e2e0c8be99e86ce75bf8651c091ab984525bff3dc718283901af67c3c844faf165d3b8149e644986be2d1ced4a2a2d3c05aca29956fb1be16e7e51a7b5566a4098f3f301933ddf11f94c3c028ab8b1ad6ab73c7bd71c06a65bf7cf6194b97547e5d0898afd9c317ec9b3a66e45bf0841f37301df6497525066003f663def064df2ad9b4fb23f43f6ae52f4c57427ece

def egcd(a, b):		# Extended Euclidean Algorithm
	if a == 0:
		return (b, 0, 1)
	else:
		gcd, x, y = egcd(b % a, a)
		return (gcd, y - (b//a) * x, x)

e = 65537
prime2 = math.gcd(n1, n2)
prime1 = n1 // prime2
phi = (prime1-1) * (prime2-1)
gcd, y, x = egcd(e, phi)
d = y
c = int(c)

decrypted = pow(c, d, n1)
flag = decrypted.to_bytes((decrypted.bit_length() + 7) // 8, "big")
print(flag)
